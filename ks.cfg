install
cdrom

lang en_US.UTF-8
keyboard us
timezone --utc Etc/UTC

cmdline

network --onboot yes --device eth0 --bootproto dhcp --hostname vagrant-centos64.vagrantup.com

firewall --disabled
selinux --disabled
authconfig --enableshadow --passalgo=sha512

zerombr
ignoredisk --only-use=sda
bootloader --location=mbr --driveorder=sda

# Similar to an AWS micro instance.
clearpart --drives=sda --all
part / --fstype=ext4 --size 7575
part swap --size 613

firstboot --disabled

rootpw --plaintext vagrant

reboot

%packages --instLangs=en_US.utf8 --nobase
-efibootmgr

%post --log=/root/install-post.log

set -x

echo %_install_langs en_US.utf8 >> /etc/rpm/macros

# No fsck at boot
sed -i -E 's/(defaults[[:space:]]+)1 1/\10 0/' /etc/fstab

# Create vagrant user
groupadd vagrant
useradd vagrant -g vagrant -G wheel
echo "vagrant" | passwd --stdin vagrant

# Install vagrant keys
mkdir -p /home/vagrant/.ssh
chmod 700 /home/vagrant/.ssh
cd /home/vagrant/.ssh
(echo -n ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrt
 echo -n vp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS
 echo -n 0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPI
 echo -n TAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6ki
 echo -n vAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvx
 echo -n hMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE
 echo 98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key ) \
     >authorized_keys
chown -R vagrant:vagrant /home/vagrant/.ssh

# Import key first so that yum doesn't complain later.
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6

# yum-utils : package-cleanup command.
# kernel-devel : VirtualBox Guest Additions.
# man : tools are never consistent across platforms.
# nfs-utils : Vagrant's shared folders.
yum shell -y <<EOM
update
groupinstall "Development Tools"
install http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
install yum-utils kernel-devel man nfs-utils
run
EOM

# Don't upgrade the kernel files after this point.
# VirtualBox Guest Additions will break if it is upgraded.
echo 'exclude=kernel*' >>/etc/yum.conf

rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6

sed -i '/.*requiretty/d' /etc/sudoers
echo '%wheel ALL=NOPASSWD: ALL' >> /etc/sudoers

# Squash the delay on boot
sed -i '/splashimage/d;s_timeout.*$_timeout=0_;s/ rhgb quiet//g' \
    /boot/grub/grub.conf

echo 'UseDNS no' >> /etc/ssh/sshd_config

chkconfig auditd off
chkconfig crond off
chkconfig sshd off

# Just keep US English.
find /usr/share/locale -mindepth 1 -maxdepth 1 -type d \
    -not -name en -not -name en_US -not -name 'en@*' \
    -exec rm -rf {} +

localedef --list-archive | \
    grep -vE '^en_US.*' | \
    xargs localedef --delete-from-archive

mv /usr/lib/locale/locale-archive /usr/lib/locale/locale-archive.tmpl
build-locale-archive


# After this cat reboot to that latest kernel, install Guest Additions
# and clean up the system so that it can be packed down.
# This section is weird as you need to escape $, `, \, etc.
cat <<EOM >/etc/rc.local
#!/bin/sh -x

touch /var/lock/subsys/local

# If the kernel has been upgraded, remove old versions.
package-cleanup -y --oldkernel --count=1

# Mount Guest Additions
for c in \`ls -d /dev/cdrom*\`
do
    mount -o ro \$c /mnt/

    if [ -x /mnt/VBoxLinuxAdditions.run ]
    then
        break
    else
        umount /mnt/
    fi
done

# VirtualBox Guest Additions
# The "Window System drivers" step will fail which is fine because we
# don't have Xorg
/mnt/VBoxLinuxAdditions.run
chkconfig vboxadd-x11 off
umount /mnt/


# kernel-devel : Installed for VirtualBox Guest Additions
# systemtap-client systemtap-runtime : Kernel profiling
# yum-utils : package-cleanup command
yum shell -y <<EOF
remove kernel-devel
remove systemtap-client systemtap-runtime
remove yum-utils
run
EOF


yum clean all  # Remove yum's cache files.
rpm --rebuilddb


EMAIL=root
# Send a summary of what happened in the installation.
FILES=\`ls /var/log/boot.log /root/install-post.log \\
          /root/install.log /root/install.log.syslog\`
(echo -en "To: \${EMAIL}\\r\\n" ;
 echo -en "Subject: CentOS Installation Summary\\r\\n\\r\\n" ;
 echo -en "Full package list:\\r\\n\\r\\n" ;
 rpm -qa | sort ;
 for f in \${FILES}; do
   echo -en "\\r\\n\\r\\n\$f:\\r\\n\\r\\n" ;
   sed 's/^/    /' \$f && rm -f \$f ;
 done ) | sendmail \${EMAIL}

sleep 10 # Give postfix a bit of time to send the email.
service postfix stop # Kill postfix so we can clear logs.

rm -f /var/log/dmesg.old /var/log/anaconda.ifcfg.log \\
      /var/log/anaconda.log /var/log/anaconda.program.log \\
      /var/log/anaconda.storage.log /var/log/anaconda.syslog \\
      /var/log/anaconda.yum.log /root/anaconda-ks.cfg \\
      /var/log/vboxadd-install.log /var/log/vbox-install-x11.log \\
      /var/log/VBoxGuestAdditions.log /var/log/vboxadd-install-x11.log
echo -n | tee /var/log/dmesg /var/log/maillog /var/log/lastlog \\
              /var/log/secure /var/log/yum.log >/var/log/cron

chkconfig auditd on
chkconfig crond on
chkconfig sshd on

rm -rf /tmp/* /tmp/.[^.]+
dd if=/dev/zero of=/tmp/clean || rm -f /tmp/clean


swappart=\`cat /proc/swaps | tail -n1 | awk -F ' ' '{print \$1}'\`
swapoff \$swappart
dd if=/dev/zero of=\$swappart
mkswap \$swappart


cat <<EOF >/etc/rc.local && poweroff
#!/bin/sh

touch /var/lock/subsys/local
EOF

EOM

%end
