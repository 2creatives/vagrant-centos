install
cdrom

lang en_US.UTF-8
keyboard us
timezone --utc Etc/UTC

cmdline

network --onboot yes --device eth0 --bootproto dhcp --noipv6 --hostname vagrant-centos64.vagrantup.com

firewall --disabled
selinux --disabled
authconfig --enableshadow --passalgo=sha512

zerombr
ignoredisk --only-use=sda
bootloader --location=mbr --driveorder=sda

# Similar to an AWS micro instance.
clearpart --drives=sda --all
part / --fstype=ext4 --size 7575
part swap --size 613

firstboot --disabled

rootpw --plaintext vagrant

reboot

%packages --instLangs=en_US.utf8 --nobase
@core
-audit
-b43-openfwwf
-cryptsetup-luks-libs
-efibootmgr
-fuse
-iscsi-initiator-utils
-lvm2
-lvm2-libs
-m4
-mdadm
-pciutils-libs
-selinux-policy
-selinux-policy-targeted
-xfsprogs

%post --log=/root/install-post.log

set -x

echo %_install_langs en_US.utf8 >> /etc/rpm/macros

# No fsck at boot
sed -iE 's/(defaults[[:space:]]+)1 1/\10 0/' /etc/fstab

# Create vagrant user
groupadd vagrant
useradd vagrant -g vagrant -G wheel
echo "vagrant" | passwd --stdin vagrant

# Install vagrant keys
mkdir -p /home/vagrant/.ssh
chmod 700 /home/vagrant/.ssh
cd /home/vagrant/.ssh
echo 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key' > authorized_keys
chown -R vagrant:vagrant /home/vagrant/.ssh

yum shell -y <<EOM
update
groupinstall "Development Tools"
install http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
install yum-utils kernel-devel man nfs-utils
run
EOM

# Don't upgrade the kernel files after this point.
# VirtualBox Guest Additions will break if it is upgraded.
echo 'exclude=kernel*' >>/etc/yum.conf

rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6

sed -i '/.*requiretty/d' /etc/sudoers
echo '%wheel ALL=NOPASSWD: ALL' >> /etc/sudoers

# Squash the delay on boot
sed -i '/splashimage/d;s_timeout.*$_timeout=0_;s/ rhgb quiet//g' /boot/grub/grub.conf

echo 'UseDNS no' >> /etc/ssh/sshd_config


# Minify
find /usr/share/locale -mindepth 1 -maxdepth 1 -type d -not -name 'en*' -exec rm -rf {} +

localedef --list-archive | grep -v -E '^en.*' | xargs localedef --delete-from-archive
mv /usr/lib/locale/locale-archive /usr/lib/locale/locale-archive.tmpl
build-locale-archive


# Reboot to get latest kernel
cat <<EOM >/etc/rc.local
#!/bin/sh -x

touch /var/lock/subsys/local

package-cleanup -y --oldkernel --count=1

# Mount Guest Additions
for c in \`ls -d /dev/cdrom*\`
do
    mount -o ro \$c /mnt/

    if [ -x /mnt/VBoxLinuxAdditions.run ]
    then
        break
    else
        umount /mnt/
    fi
done

# VirtualBox Guest Additions
# The "Window System drivers" step will fail which is fine because we don't
# have Xorg
/mnt/VBoxLinuxAdditions.run
chkconfig vboxadd-x11 off

rpm --rebuilddb
dd if=/dev/zero of=/tmp/clean || rm -f /tmp/clean

swappart=\`cat /proc/swaps | tail -n1 | awk -F ' ' '{print \$1}'\`
swapoff \$swappart
dd if=/dev/zero of=\$swappart
mkswap \$swappart

cat <<EOF >/etc/rc.local && poweroff
#!/bin/sh

touch /var/lock/subsys/local
EOF

EOM

%end
